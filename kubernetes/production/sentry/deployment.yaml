apiVersion: apps/v1
kind: Deployment
metadata:
  name: sentry-web
  labels:
    group: sentry
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      group: sentry
      role: browser-application
  template:
    metadata:
      labels:
        group: sentry
        role: browser-application
    spec:
      containers:
        - name: sentry
          image: sentry:9.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: sentry-data
              mountPath: "/var/lib/sentry/files"
          env:
            - name: SENTRY_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: runtime-secrets
                  key: SENTRY_SECRET
            - name: SENTRY_DB_NAME
              value: sentry
            - name: SENTRY_DB_USER
              value: sentry
            - name: SENTRY_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: runtime-secrets
                  key: POSTGRES_SENTRY_PASSWORD
            - name: SENTRY_POSTGRES_HOST
              value: pgbouncer.default
            - name: SENTRY_POSTGRES_PORT
              value: "5432"
            - name: SENTRY_REDIS_HOST
              value: redis-origin.default
            - name: SENTRY_REDIS_PORT
              value: "6379"
            - name: SENTRY_REDIS_DATABASE
              value: "4"
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: "/_health/"
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: "/_health/"
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
      volumes:
        - name: sentry-data
          persistentVolumeClaim:
            claimName: sentry-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sentry-worker
  labels:
    group: sentry
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      group: sentry
      role: background-worker
  template:
    metadata:
      labels:
        group: sentry
        role: background-worker
    spec:
      containers:
        - name: sentry
          image: sentry:9.0
          imagePullPolicy: IfNotPresent
          args:
            - run
            - worker
          env:
            - name: SENTRY_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: runtime-secrets
                  key: SENTRY_SECRET
            - name: SENTRY_DB_NAME
              value: sentry
            - name: SENTRY_DB_USER
              value: sentry
            - name: SENTRY_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: runtime-secrets
                  key: POSTGRES_SENTRY_PASSWORD
            - name: SENTRY_POSTGRES_HOST
              value: pgbouncer.default
            - name: SENTRY_POSTGRES_PORT
              value: "5432"
            - name: SENTRY_REDIS_HOST
              value: redis-origin.default
            - name: SENTRY_REDIS_PORT
              value: "6379"
            - name: SENTRY_REDIS_DATABASE
              value: "4"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sentry-cron
  labels:
    group: sentry
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      group: sentry
      role: background-worker
  template:
    metadata:
      labels:
        group: sentry
        role: background-worker
    spec:
      containers:
        - name: sentry
          image: sentry:9.0
          imagePullPolicy: IfNotPresent
          args:
            - run
            - cron
          volumeMounts:
          env:
            - name: SENTRY_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: runtime-secrets
                  key: SENTRY_SECRET
            - name: SENTRY_DB_NAME
              value: sentry
            - name: SENTRY_DB_USER
              value: sentry
            - name: SENTRY_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: runtime-secrets
                  key: POSTGRES_SENTRY_PASSWORD
            - name: SENTRY_POSTGRES_HOST
              value: pgbouncer.default
            - name: SENTRY_POSTGRES_PORT
              value: "5432"
            - name: SENTRY_REDIS_HOST
              value: redis-origin.default
            - name: SENTRY_REDIS_PORT
              value: "6379"
            - name: SENTRY_REDIS_DATABASE
              value: "4"
